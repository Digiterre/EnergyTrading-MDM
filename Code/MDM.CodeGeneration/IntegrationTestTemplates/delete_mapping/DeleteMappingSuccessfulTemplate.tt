<#+
// <copyright file="DeleteMappingSuccessfulTemplate.tt" company="RWE">
//  Copyright © RWE. All Rights Reserved.
// </copyright>

public class DeleteMappingSuccessfulTemplate : Template
{
    public string EntityName;
    
    public override string TransformText()
    {#>
namespace EnergyTrading.MDM.Test
{
    using System.Configuration;
    using System.Linq;
    using System.Net;

    using Microsoft.Http;
    using NUnit.Framework;

    using EnergyTrading.Data.EntityFramework;
    using EnergyTrading.MDM.Data.EF.Configuration;

    [TestFixture]
    public class when_a_request_is_made_to_delete_a_<#=this.EntityName.ToLower() #>_mapping : IntegrationTestBase
    {
        private static HttpResponseMessage response;
        private static HttpClient client;
        private static MDM.<#= this.EntityName #> <#= this.EntityName.ToLower() #>;

        [SetUp]
        public static void ClassInit(TestContext context)
        {
            Establish_context();
            Because_of();
        }

        protected static void Establish_context()
        {
            <#= this.EntityName.ToLower() #> = <#= this.EntityName #>Data.CreateEntityWithTwoDetailsAndTwoMappings();
        }

        protected static void Because_of()
        {
            client = new HttpClient();
            var uri = ServiceUrl["<#= this.EntityName #>"] + <#= this.EntityName.ToLower() #>.Id + "/Mapping/" + <#= this.EntityName.ToLower() #>.Mappings[0].Id;
            response = client.Delete(uri);
        }

        [Test]
        public void should_delete_the_mapping()
        {
            var db<#= this.EntityName #> =
                new DbSetRepository<MDM.<#= this.EntityName #>>(new MappingContext()).FindOne(<#= this.EntityName.ToLower() #>.Id);

            Assert.IsTrue(db<#= this.EntityName #>.Mappings.Where(mapping => mapping.Id == <#= this.EntityName.ToLower() #>.Mappings[0].Id).Count() == 0);
        }

        [Test]
        public void should_leave_other_mappings_untouched()
        {
            var db<#= this.EntityName #> =
                new DbSetRepository<MDM.<#= this.EntityName #>>(new MappingContext()).FindOne(<#= this.EntityName.ToLower() #>.Id);

            Assert.AreEqual(1, db<#= this.EntityName #>.Mappings.Count);
        }

        [Test]
        public void should_return_status_ok()
        {
            response.StatusCode = HttpStatusCode.OK;
        }
    }

}
    <#+    return this.GenerationEnvironment.ToString();
    }
}
#>
