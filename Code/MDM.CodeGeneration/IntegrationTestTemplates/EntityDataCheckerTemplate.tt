<#+
// <copyright file="EntityDataChecker.tt" company="RWE">
//  Copyright © RWE. All Rights Reserved.
// </copyright>

public class EntityDataCheckerTemplate : Template
{
    public string EntityName;
    public Type EntityDetailsType;
    public Type ContractDetailsType;
    public bool IsTemporal;

    public override string TransformText()
    {
#>
namespace EnergyTrading.MDM.Test
{
    using System;
    using System.Linq;

    using Microsoft.VisualStudio.TestTools.UnitTesting;

    using EnergyTrading.Data.EntityFramework;
    using RWEST.Nexus.MDM.Contracts;
    using EnergyTrading.MDM.Data.EF.Configuration;
    using EnergyTrading;

    public static class <#= EntityName #>DataChecker
    {
        public static void CompareContractWithEntityDetails(RWEST.Nexus.MDM.Contracts.<#= EntityName #> contract, MDM.<#= EntityName #> entity)
        {
            throw new NotImplementedException();

            // TODO_IntegrationTestGeneration_<#=EntityName #> - assert all properties on entity are on contract
            // Assert.AreEqual(contract.Details.Name, entity.Name);
        }

        public static void ConfirmEntitySaved(int id, RWEST.Nexus.MDM.Contracts.<#= EntityName #> contract)
        {
            var savedEntity =
                new DbSetRepository<MDM.<#= EntityName #>>(new MappingContext()).FindOne(id);
            contract.Identifiers.Add(new NexusId() { IsNexusId = true, Identifier = id.ToString() });

            CompareContractWithEntityDetails(contract, savedEntity);
        }

        public static void CompareContractWithSavedEntity(RWEST.Nexus.MDM.Contracts.<#= EntityName #> contract)
        {
            int id = int.Parse(contract.Identifiers.Where(x => x.IsNexusId).First().Identifier);
            var savedEntity = new DbSetRepository<MDM.<#= EntityName #>>(new MappingContext()).FindOne(id);

            CompareContractWithEntityDetails(contract, savedEntity);
        }
    }
}
<#+	return this.GenerationEnvironment.ToString();
    }
}
#>
